/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package abrir.archivo;

import java.awt.List;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JTable;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Pablo
 */
public class Conflictos extends javax.swing.JFrame {
    private Excel excel;
    private static final  String[] unidadesDeInvestigacion=",CIB - CENTRO DE INVESTIGACIÓN EN BIOTECNOLOGÍA,CIC - CENTRO DE INVESTIGACIONES EN COMPUTACIÓN,CIF - CENTRO DE INVESTIGACIÓN EN INNOVACIÓN FORESTAL,CIPA - CENTRO DE INVESTIGACIÓN EN PROTECCIÓN AMBIENTAL,CIVCO - CENTRO DE INVESTIGACIÓN EN VIVIENDA Y CONSTRUCCIÓN,CIDASTH - CENTRO DE INVESTIGACIÓN Y DESARROLLO EN AGRICULTURA SOSTENIBLE PARA EL TRÓPICO HÚMEDO,CIGA - CENTRO DE INVESTIGACIÓN Y GESTIÓN AGROINDUSTRIAL,CEQIATEC - CENTRO DE INVESTIGACIÓN Y DE SERVICIOS QUÍMICOS Y MICROBIOLÓGICOS,CIEMTEC - CENTRO DE INVESTIGACIÓN Y EXTENSIÓN EN MATERIALES,CIADEGTEC - CENTRO DE INVESTIGACIÓN EN ADMINISTRACIÓN, ECONOMÍA Y GESTIÓN TECNOLÓGICA,ATI - AREA DE ADMINISTRACION DE TECNOLOGIA DE INFORMACIÓN,AU - ESCUELA ARQUITECTURA Y URBANISMO,CD - ESCUELA DE CULTURA Y DEPORTE,CDA - CENTRO DE DESARROLLO ACADEMICO,CI - ESCUELA DE CIENCIAS DEL LENGUAJE,CIT - CENTRO DE VINCULACIÓN,DOCINADE,CS - ESCUELA DE CIENCIAS SOCIALES,DI - ESCUELA DISEÑO INDUSTRIAL,DOP - ORIENTACION Y PSICOLOGIA,DP - AREA ACADEMICA DE DOCTORADO EN INGENIERIA,E - ESCUELA DE INGENIERIA EN ELECTRONICA,ECE - ESCUELA DE CIENCIAS NATURALES Y EXACTAS,EIC - ESCUELA DE IDIOMAS Y CIENCIAS SOCIALES,ET - ESCUELA DE EDUCACION TECNICA,FI - ESCUELA DE FISICA,GPM - AREA ACADEMICA DE GERENCIA DE PROYECTOS,IA - ESCUELA INGENIERIA AGRICOLA,IDC - INGENIERIA EN COMPUTADORES,IMT - AREA ACADEMICA INGENIERIA MECATRONICA,MA - ESCUELA DE MATEMATICA,MI - ESCUELA DE INGENIERIA ELECTROMECANICA,MRN - AREA ACADEMICA AGROFORESTAL,OEG - PROGRAMA DE EQUIDAD DE GENERO,PI - ESCUELA DE INGENIERIA EN PRODUCCION INDUSTRIAL,QU - ESCUELA DE QUIMICA,SCC - ESCUELA DE CIENCIAS Y LETRAS,SHO - ESCUELA DE INGENIERIA EN SEGURIDAD LABORAL E HIGIENE AMBIENTAL,VIE - VICERRECTORIA DE INVESTIGACION Y EXTENSION,Laboratorio de Ergonomia,Laboratotorio de Plasma,N/A - SIN DEPARTAMENTO".split(",");
    private static final  String[] Campus=",1 - CAMPUS TECNOLOGICO CENTRAL CARTAGO,2 - CAMPUS TECNOLOGICO LOCAL SAN JOSE,3 - CAMPUS TECNOLOGICO LOCAL SAN CARLOS,4 - CENTRO ACADEMICO DE LIMON,5 - CENTRO ACADEMICO DE ALAJUELA,Sin Campus".split(",");
    /**
     * Creates new form Conflictos
     */
    public Conflictos() {
        initComponents();
    }

    public Conflictos(Excel excel) {
        initComponents();
        this.excel = excel;
        
       
    }

  
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Guardar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Guardar.setText("Guardar");
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Código", "Fila", "Tipo", "Hoja excel", "Resolver "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setEnabled(false);
        jTable1.setName(""); // NOI18N
        jTable1.setRowHeight(40);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Guardar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1820, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(Guardar)
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
        dispose();
        try {
            Guardar guarda=new Guardar(excel);
        } catch (IOException ex) {
            Logger.getLogger(Conflictos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_GuardarActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
                      
        int fila=jTable1.rowAtPoint(evt.getPoint());
        int columna=jTable1.columnAtPoint(evt.getPoint());
        //System.out.println(columna);
        if(fila < jTable1.getRowCount() && fila >=0 && columna < jTable1.getColumnCount() && columna>=0){
           // System.out.println(fila);
            if(columna==4){
                int hoja=0;
                System.out.println(jTable1.getValueAt(fila, 3));
                if(jTable1.getValueAt(fila, 3)=="AutoresTEC"){
                    hoja=0;
                }
                 if(jTable1.getValueAt(fila, 3)=="Autores Internacionales"){
                    hoja=1;
                }
                if(jTable1.getValueAt(fila, 3)=="Univesidad no reconocida"){
                    hoja=2;
                }
                System.out.println((String) jTable1.getValueAt(fila, 2));
                if("Escuela o Unidad".equals((String) jTable1.getValueAt(fila, 2))||"Campus".equals((String) jTable1.getValueAt(fila, 2))){
                    if("Escuela o Unidad".equals((String) jTable1.getValueAt(fila, 2))){
                        ResolverConflictosCombo resolEscu=new ResolverConflictosCombo(Excel.getBook2(),jTable1.convertRowIndexToModel(fila),columna, (int) jTable1.getValueAt(fila, 1),hoja);
                        for (String unidadDeInvestigacion :unidadesDeInvestigacion) {
                            resolEscu.getjComboBox1().addItem(unidadDeInvestigacion);
                        }
                        resolEscu.getInfoLinea().setText(Excel.getConflictos().get(jTable1.convertRowIndexToModel(fila)));
                        resolEscu.getTipo().setText((String) jTable1.getValueAt(fila, 2));
                        resolEscu.setVisible(true);
                    }
                    if("Campus".equals((String) jTable1.getValueAt(fila, 2))){
                        ResolverConflictosCombo resolCampus=new ResolverConflictosCombo(Excel.getBook2(),jTable1.convertRowIndexToModel(fila),columna, (int) jTable1.getValueAt(fila, 1),hoja);
                        for (String Sede :Campus) {
                            resolCampus.getjComboBox1().addItem(Sede);
                        }
                        resolCampus.getInfoLinea().setText(Excel.getConflictos().get(jTable1.convertRowIndexToModel(fila)));
                        resolCampus.getTipo().setText((String) jTable1.getValueAt(fila, 2));
                        resolCampus.setVisible(true);
                    }
                }
                else{
                    ResolverConflictos resol=new ResolverConflictos(Excel.getBook2(),jTable1.convertRowIndexToModel(fila),columna, (int) jTable1.getValueAt(fila, 1),hoja);
                    resol.getInfoLinea().setText(Excel.getConflictos().get(jTable1.convertRowIndexToModel(fila)));
                    resol.getTipo().setText((String) jTable1.getValueAt(fila, 2));
                    resol.setVisible(true);
                }   
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Conflictos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Conflictos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Conflictos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Conflictos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Conflictos().setVisible(true);
                

            }
        });
    }

    public JTable getjTable1() {
        return jTable1;
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Guardar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
